syntax = "proto3";

package protogallery;

option go_package = "/proto;protogallery";

service AlbumService {
  rpc CreateAlbum (CreateAlbumRequest) returns (CreateAlbumResponse);
  rpc GetAlbumsByUser (GetAlbumsByUserRequest) returns (GetAlbumsByUserResponse);
  rpc UpdateAlbum (UpdateAlbumRequest) returns (UpdateAlbumResponse);
  rpc DeleteAlbum (DeleteAlbumRequest) returns (DeleteAlbumResponse);
  rpc GetPrivateAlbum (GetPrivateAlbumRequest) returns (GetPrivateAlbumResponse);
}

service MediaService {
  rpc AddMedia (AddMediaRequest) returns (AddMediaResponse);
  rpc GetMediaByUser (GetMediaByUserRequest) returns (GetMediaByUserResponse);
  rpc MarkAsPrivate (MarkAsPrivateRequest) returns (MarkAsPrivateResponse);
  rpc GetPrivateMedia (GetPrivateMediaRequest) returns (GetPrivateMediaResponse);
  rpc DownloadMedia (DownloadMediaRequest) returns (DownloadMediaResponse);
  rpc DeleteMedia (DeleteMediaRequest) returns (DeleteMediaResponse);
  rpc DetectSimilarMedia (DetectSimilarMediaRequest) returns (DetectSimilarMediaResponse);
}

service UserService {
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
}

service S3Service {
  rpc ListBuckets (ListBucketsRequest) returns (ListBucketsResponse);
  rpc CreateBucket (CreateBucketRequest) returns (CreateBucketResponse);
  rpc DeleteBucket (DeleteBucketRequest) returns (DeleteBucketResponse);
  rpc GetFilesInAlbum (GetFilesInAlbumRequest) returns (GetFilesInAlbumResponse);
  rpc DownloadTempFile (DownloadTempFileRequest) returns (DownloadTempFileResponse);
}

// Album messages
message CreateAlbumRequest {
  string name = 1;
  string description = 2;
  uint32 user_id = 3;
}

message CreateAlbumResponse {
  string message = 1;
}

message GetAlbumsByUserRequest {
  uint32 user_id = 1;
}

message GetAlbumsByUserResponse {
  repeated Album albums = 1;
}

message UpdateAlbumRequest {
  uint32 album_id = 1;
  string name = 2;
  string description = 3;
}

message UpdateAlbumResponse {
  string message = 1;
}

message DeleteAlbumRequest {
  uint32 album_id = 1;
}

message DeleteAlbumResponse {
  string message = 1;
}

message GetPrivateAlbumRequest {
  uint32 album_id = 1;
}

message GetPrivateAlbumResponse {
  Album album = 1;
}

// Media messages
message AddMediaRequest {
  string name = 1;
  uint32 album_id = 2;
  bytes file_data = 3;
}

message AddMediaResponse {
  string message = 1;
}

message GetMediaByUserRequest {
  uint32 user_id = 1;
}

message GetMediaByUserResponse {
  repeated Media media_list = 1;
}

message MarkAsPrivateRequest {
  uint32 media_id = 1;
  string pin = 2;
}

message MarkAsPrivateResponse {
  string message = 1;
}

message GetPrivateMediaRequest {
  uint32 user_id = 1;
}

message GetPrivateMediaResponse {
  repeated Media media = 1;
}

message DownloadMediaRequest {
  uint32 media_id = 1;
}

message DownloadMediaResponse {
  bytes file_data = 1;
}

message DeleteMediaRequest {
  uint32 media_id = 1;
}

message DeleteMediaResponse {
  string message = 1;
}

message DetectSimilarMediaRequest {
  uint32 media_id = 1;
}

message DetectSimilarMediaResponse {
  repeated Media media = 1;
}

// User messages
message CreateUserRequest {
  string username = 1;
  string email = 2;
}

message CreateUserResponse {
  string message = 1;
}

// S3 messages
message ListBucketsRequest {}

message ListBucketsResponse {
  repeated Bucket buckets = 1;
}

message CreateBucketRequest {
  string bucket_name = 1;
}

message CreateBucketResponse {
  string message = 1;
}

message DeleteBucketRequest {
  string bucket_name = 1;
}

message DeleteBucketResponse {
  string message = 1;
}

message GetFilesInAlbumRequest {
  string bucket_name = 1;
}

message GetFilesInAlbumResponse {
  repeated string file_names = 1;
}

message DownloadTempFileRequest {
  string bucket_name = 1;
  string object_name = 2;
}

message DownloadTempFileResponse {
  string local_path = 1;
}

// Data structures
message Album {
  uint32 id = 1;
  string name = 2;
  string description = 3;
  uint32 user_id = 4;
}

message Media {
  uint32 id = 1;
  string name = 2;
  uint32 album_id = 3;
  uint32 file_size = 4;
}

message Bucket {
  string name = 1;
  string creation_date = 2;
  string location_constraint = 3;
  string object_lock_config = 4;
  string object_delimiter = 5;
}
